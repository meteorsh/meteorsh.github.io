<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>How to download bilibili videos</title>
      <link href="/posts/2342.html"/>
      <url>/posts/2342.html</url>
      
        <content type="html"><![CDATA[<h1 id="唧唧Down—适合Windows-强烈推荐"><a href="#唧唧Down—适合Windows-强烈推荐" class="headerlink" title="唧唧Down—适合Windows(强烈推荐)"></a>唧唧Down—适合Windows(强烈推荐)</h1><blockquote><p>哔哩哔哩下载神器：唧唧Down<br>官网：<a href="http://client.jijidown.com/" target="_blank" rel="noopener">http://client.jijidown.com/</a></p></blockquote><ul><li>下载完成后，运行软件</li><li>只要把你想下载的b站视频网址复制到该软件就可以下载</li><li>视频清晰度可选1080p，还可以设置是否下载弹幕</li><li>用这款软件再配合potplayer，可以尽情享用b站任何视频</li></ul><p><img src="http://jfile.jijidown.com/Web/client.jijidown.com/img/newlook.png?20171208" alt=""></p><h1 id="Chrome插件—适合Mac-Windows"><a href="#Chrome插件—适合Mac-Windows" class="headerlink" title="Chrome插件—适合Mac/Windows"></a>Chrome插件—适合Mac/Windows</h1><ul><li><p>借助Chrome插件 bilibili哔哩哔哩下载助手<br><img src="https://img-blog.csdnimg.cn/20190930112541271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p></li><li><p>在谷歌应用商城下载安装后在b站视频右下角打开下载助手，点击合并下载即可<br><img src="https://img-blog.csdnimg.cn/2019093011282092.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p></li></ul><h1 id="GitHub开源youtube-dl—适合Mac-Windows"><a href="#GitHub开源youtube-dl—适合Mac-Windows" class="headerlink" title="GitHub开源youtube-dl—适合Mac/Windows"></a>GitHub开源youtube-dl—适合Mac/Windows</h1><p>项目地址: <a href="https://github.com/ytdl-org/youtube-dl" target="_blank" rel="noopener">https://github.com/ytdl-org/youtube-dl</a></p><p>一：mac下安装方法很简单<br>打开终端根目录，输入下面两条命令即可</p><pre><code>sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dlsudo chmod a+rx /usr/local/bin/youtube-dl</code></pre><p>二：使用方法</p><ol><li>youtube-dl 网址      //在哪个文件夹用终端，就会把文件下载到这个文件夹</li><li>youtube-dl 网址 -o ‘你要的名字.mp4’</li><li>youtube-dl -F 网址             //查看支持的视频格式</li><li>youtube-dl -f format编号 网址  //下载对应的视频格式, 一般默认是best画质</li></ol><p>说明: 此方法不仅可以下载b站视频也可以下载youtube视频<br><img src="https://img-blog.csdnimg.cn/20190930144743703.png" alt=""></p><p>至于Windows下使用就更简单了，直接在项目地址那下载exe文件就可以使用了<br><img src="https://img-blog.csdnimg.cn/20190930144933247.png" alt=""></p><h1 id="Downie-适合Mac-强烈推荐"><a href="#Downie-适合Mac-强烈推荐" class="headerlink" title="Downie-适合Mac(强烈推荐)"></a>Downie-适合Mac(强烈推荐)</h1><p>可以下载很多网站的视频，比如Youtube、Bilibili等，号称mac上最好的视频下载器</p><p>注意：这款软件是付费的，但如果长期用的话，这点钱值的花</p>]]></content>
      
      
      <categories>
          
          <category> 计算机知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter Notebook vim mode</title>
      <link href="/posts/100323.html"/>
      <url>/posts/100323.html</url>
      
        <content type="html"><![CDATA[<p>我想大多数习惯了vim的人使用一个新的编辑器一定会想问这个编辑器能用vim吗，这个编辑器怎么将 jj 映射到 Esc？作为一名vim爱好者，我也有同样的疑问</p><p>jupyter notebook默认只能修改命令模式，在编辑模式下无法设置快捷键，这让我很不爽，一度想放弃使用它，直到我知道了下面这个项目</p><p>项目地址：<a href="https://github.com/lambdalisue/jupyter-vim-binding" target="_blank" rel="noopener">lambdalisue/jupyter-vim-binding</a></p><p>这个项目能够让我们在jupyter notebook开启vim模式，大大提升我们的工作效率</p><h1 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h1><p><strong>只要在终端分别运行下面的代码，就可以成功安装插件</strong></p><pre><code># Create required directory in case (optional)mkdir -p $(jupyter --data-dir)/nbextensions# Clone the repositorycd $(jupyter --data-dir)/nbextensionsgit clone https://github.com/lambdalisue/jupyter-vim-binding vim_binding# Activate the extensionjupyter nbextension enable vim_binding/vim_binding</code></pre><p>如果Activate the extension没成功，重启下终端就行了</p><p>然后再打开jupyter notebook就可以看到一个绿色的方块，说明已经开启了vim模式</p><div align=center><img src="https://img-blog.csdnimg.cn/20200223073816616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div>此时jupyter notebook有三种模式：jupyter 模式、command模式、insert模式使用`:q`可以从vim的command的模式切换成jupyter模式<h1 id="将-jj-映射到-Esc"><a href="#将-jj-映射到-Esc" class="headerlink" title="将 jj 映射到 Esc"></a>将 jj 映射到 Esc</h1><p>在<code>~/.jupyter/custom/custom.js</code>处创建一个<code>custom.js</code>（默认没有这个文件）<br><img src="https://img-blog.csdnimg.cn/20200223074046425.png" alt=""><br>然后将下面的代码加到custom.js，重启jupyter notebook快捷键生效</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// Configure CodeMirror Keymap</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token string">'nbextensions/vim_binding/vim_binding'</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">// depends your installation</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// Map jj to &lt;Esc> 这里我加了个l，是为了保证光标在同一个位置</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"jj"</span><span class="token punctuation">,</span> <span class="token string">"&lt;Esc>l"</span><span class="token punctuation">,</span> <span class="token string">"insert"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 我自定义的快捷键</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token string">"^"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token string">"$"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"dH"</span><span class="token punctuation">,</span> <span class="token string">"d0"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"s"</span><span class="token punctuation">,</span> <span class="token string">":q"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// Swap j/k and gj/gk (Note that &lt;Plug> mappings)</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"j"</span><span class="token punctuation">,</span> <span class="token string">"&lt;Plug>(vim-binding-gj)"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"k"</span><span class="token punctuation">,</span> <span class="token string">"&lt;Plug>(vim-binding-gk)"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"gj"</span><span class="token punctuation">,</span> <span class="token string">"&lt;Plug>(vim-binding-j)"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"gk"</span><span class="token punctuation">,</span> <span class="token string">"&lt;Plug>(vim-binding-k)"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Configure Jupyter Keymap</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token string">'nbextensions/vim_binding/vim_binding'</span><span class="token punctuation">,</span>  <span class="token string">'base/js/namespace'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>vim_binding<span class="token punctuation">,</span> ns<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// Add post callback</span>  vim_binding<span class="token punctuation">.</span>on_ready_callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> km <span class="token operator">=</span> ns<span class="token punctuation">.</span>keyboard_manager<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Allow Ctrl-2 to change the cell mode into Markdown in Vim normal mode</span>    km<span class="token punctuation">.</span>edit_shortcuts<span class="token punctuation">.</span><span class="token function">add_shortcut</span><span class="token punctuation">(</span><span class="token string">'ctrl-2'</span><span class="token punctuation">,</span> <span class="token string">'vim-binding:change-cell-to-markdown'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Update Help</span>    km<span class="token punctuation">.</span>edit_shortcuts<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">'rebuild.QuickHelp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Selecting all</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token string">'nbextensions/vim_binding/vim_binding'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   CodeMirror<span class="token punctuation">.</span>Vim<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">"&lt;C-a>"</span><span class="token punctuation">,</span> <span class="token string">"ggVG"</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Use Ctrl + s to save in Vim normal and insert mode</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token string">'nbextensions/vim_binding/vim_binding'</span><span class="token punctuation">,</span>  <span class="token string">'base/js/namespace'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>vim_binding<span class="token punctuation">,</span> ns<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// Add post callback</span>  vim_binding<span class="token punctuation">.</span>on_ready_callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> km <span class="token operator">=</span> ns<span class="token punctuation">.</span>keyboard_manager<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Indicate the key combination to run the commands</span>    km<span class="token punctuation">.</span>edit_shortcuts<span class="token punctuation">.</span><span class="token function">add_shortcut</span><span class="token punctuation">(</span><span class="token string">'ctrl-s'</span><span class="token punctuation">,</span> <span class="token string">'jupyter-notebook:save-notebook'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Update Help</span>    km<span class="token punctuation">.</span>edit_shortcuts<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">'rebuild.QuickHelp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如何还想映射其他vim快捷键，只要按照上面的代码格式修改就行了</p><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><p><a href="https://github.com/lambdalisue/jupyter-vim-binding/wiki/Customization" target="_blank" rel="noopener">自定义快捷键的官方文档</a></p><ul><li><code>cmd + 1</code>设置为code</li><li><code>cmd + 2</code>设置为markdown</li><li><code>shift + Enter</code>运行当前代码，并进入下一行</li><li><code>s</code>从vim-command模式（绿色）切换到jupyter模式（蓝色）</li><li><code>control + s</code>在vim normal模式和insert模式都能保存文件</li><li><code>option + Enter</code>在vim insert模式运行代码并插入一行</li><li><code>cmd + shift + Enter</code> 运行所有代码 In[*]表示在等待运行</li></ul><p><img src="https://img-blog.csdnimg.cn/20200301182846913.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200301182912913.png" alt="在这里插入图片描述"></p><div align=center><img src="https://img-blog.csdnimg.cn/20200301100641308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transfer video to audio</title>
      <link href="/posts/20236.html"/>
      <url>/posts/20236.html</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><blockquote><p>视频文件大小一般都有200-300MB，而有时我只想要这个视频的背景音乐，把视频文件转换为音频文件，这样文件大小就会在10MB以内</p></blockquote><p>使用python可以快速批量的把视频文件转换为音频文件</p><h1 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h1><ul><li><p>安装ffmpy3库</p></li><li><p>用os模块把视频的文件名读取出来，放在列表中</p></li><li><p>然后把所有视频文件后缀替换为音频的格式</p></li><li><p>当然只改后缀是不行的，因为文件属性并没有更改，我们再用FFmpeg方法对转换后的音频文件赋予它音频的属性</p></li></ul><h2 id="Python完整代码"><a href="#Python完整代码" class="headerlink" title="Python完整代码"></a>Python完整代码</h2><p>运行下面代码即可实现视频文件转换为音频文件（注意修改文件路径）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">from</span> ffmpy3 <span class="token keyword">import</span> FFmpeg<span class="token comment" spellcheck="true"># filepath：待处理视频的文件路径</span>filepath <span class="token operator">=</span> <span class="token string">"/Users/macos/Documents/Wilson79/GitHub/video-to-mp3/video"</span>filename <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"待处理的视频文件:"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># output_dir：输出音频文件的路径</span>output_dir <span class="token operator">=</span> <span class="token string">"/Users/macos/Documents/Wilson79/GitHub/video-to-mp3/music"</span><span class="token comment" spellcheck="true"># 读取上次已导出的音频文件名（防止多次运行，出现overwrited的错误）</span>exit_filename <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>output_dir<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"已导出的音频文件: "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>exit_filename<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 改文件的后缀名</span>    changefile <span class="token operator">=</span> filepath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> filename<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    change_postfix_name <span class="token operator">=</span>filename<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'mp4'</span><span class="token punctuation">,</span> <span class="token string">'mp3'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'flv'</span><span class="token punctuation">,</span> <span class="token string">'mp3'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 另外的视频格式请自行添加</span>    outputfile <span class="token operator">=</span> output_dir <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> change_postfix_name    <span class="token keyword">if</span> change_postfix_name <span class="token keyword">in</span> exit_filename<span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>changefile<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 利用FFmpeg进行转换</span>    fpg <span class="token operator">=</span> FFmpeg<span class="token punctuation">(</span>inputs<span class="token operator">=</span><span class="token punctuation">{</span>changefile<span class="token punctuation">:</span> None<span class="token punctuation">}</span><span class="token punctuation">,</span>                 outputs<span class="token operator">=</span><span class="token punctuation">{</span>outputfile<span class="token punctuation">:</span> <span class="token string">'-vn -ar 44100 -ac 2 -ab 192 -f mp3'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># mp3也可以换成wav等格式</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>fpg<span class="token punctuation">.</span>cmd<span class="token punctuation">)</span>    fpg<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n任务完成！！！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="运行后的效果"><a href="#运行后的效果" class="headerlink" title="运行后的效果"></a>运行后的效果</h1><p><img src="https://img-blog.csdnimg.cn/20200212160136119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p><div align=center><img src="https://img-blog.csdnimg.cn/20200212153448976.png" width="100%" height="70%" /></div><div align=center><img src="https://img-blog.csdnimg.cn/20200212153510214.png" width="100%" height="70%" /></div>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
