<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>B站视频下载神器——秒杀100%的视频</title>
      <link href="/2020/02/14/b-zhan-shi-pin-xia-zai-shen-qi-miao-sha-100-de-shi-pin/"/>
      <url>/2020/02/14/b-zhan-shi-pin-xia-zai-shen-qi-miao-sha-100-de-shi-pin/</url>
      
        <content type="html"><![CDATA[<h1 id="唧唧Down——适合Windows-强烈推荐"><a href="#唧唧Down——适合Windows-强烈推荐" class="headerlink" title="唧唧Down——适合Windows(强烈推荐)"></a>唧唧Down——适合Windows(强烈推荐)</h1><blockquote><p>哔哩哔哩下载神器：唧唧Down<br>官网：<a href="http://client.jijidown.com/" target="_blank" rel="noopener">http://client.jijidown.com/</a></p></blockquote><ul><li>下载完成后，运行软件</li><li>只要把你想下载的b站视频网址复制到该软件就可以下载</li><li>视频清晰度可选1080p，还可以设置是否下载弹幕</li><li>用这款软件再配合potplayer，可以尽情享用b站任何视频</li></ul><p><img src="http://jfile.jijidown.com/Web/client.jijidown.com/img/newlook.png?20171208" alt=""></p><h1 id="Chrome插件——适合Mac-Windows"><a href="#Chrome插件——适合Mac-Windows" class="headerlink" title="Chrome插件——适合Mac/Windows"></a>Chrome插件——适合Mac/Windows</h1><ul><li><p>借助Chrome插件 bilibili哔哩哔哩下载助手<br><img src="https://img-blog.csdnimg.cn/20190930112541271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>在谷歌应用商城下载安装后在b站视频右下角打开下载助手，点击合并下载即可<br><img src="https://img-blog.csdnimg.cn/2019093011282092.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ul><h1 id="神器youtube-dl——适合Mac-Windows"><a href="#神器youtube-dl——适合Mac-Windows" class="headerlink" title="神器youtube-dl——适合Mac/Windows"></a>神器youtube-dl——适合Mac/Windows</h1><p><a href="https://github.com/ytdl-org/youtube-dl" target="_blank" rel="noopener">项目地址传送门</a><br>一：mac下安装方法很简单<br>打开终端根目录，输入下面两条命令即可<br><img src="https://img-blog.csdnimg.cn/20190930144426383.png" alt="在这里插入图片描述"><br>二：使用方法</p><ol><li>youtube-dl 网址      //在哪个文件夹用终端，就会把文件下载到这个文件夹</li><li>youtube-dl 网址 -o ‘你要的名字.mp4’</li><li>youtube-dl -F 网址             //查看支持的视频格式</li><li>youtube-dl -f format编号 网址  //下载对应的视频格式, 一般默认是best画质</li></ol><p>说明: 此方法不仅可以下载b站视频也可以下载youtube视频<br><img src="https://img-blog.csdnimg.cn/20190930144743703.png" alt="在这里插入图片描述"></p><p>至于Windows下使用就更简单了，直接在项目地址那下载exe文件就可以使用了<br><img src="https://img-blog.csdnimg.cn/20190930144933247.png" alt="在这里插入图片描述"></p><p>阅读更多内容，请看<a href="https://blog.csdn.net/qq_43827595/article/details/102310871" target="_blank" rel="noopener">个人文章汇总</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>题解</title>
      <link href="/2020/02/14/leetcode-ti-jie-1339.fen-lie-er-cha-shu-de-zui-da-cheng-ji-di-gui-zi-di-xiang-shang-c/"/>
      <url>/2020/02/14/leetcode-ti-jie-1339.fen-lie-er-cha-shu-de-zui-da-cheng-ji-di-gui-zi-di-xiang-shang-c/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="题目描述（中等难度）"><a href="#题目描述（中等难度）" class="headerlink" title="题目描述（中等难度）"></a>题目描述（中等难度）</h1><p><a href="https://leetcode-cn.com/problems/maximum-product-of-splitted-binary-tree/" target="_blank" rel="noopener">原题链接</a></p><p><img src="https://img-blog.csdnimg.cn/20200211184843860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><p><strong>(递归)</strong> $O(n)$</p><ul><li>乘积 = 某个节点下所有子节点的和 *（整个树的和 - 某个节点下所有子节点的和）</li><li>后序遍历每个结点，更新最大值</li><li>注意：先用long long存数据，另外在max函数中不要先取模 <a href="https://blog.csdn.net/qq_43827595/article/details/104267327" target="_blank" rel="noopener">解释</a><br>后序遍历的好处：后序遍历可以从叶子结点开始，先求出子树的状态，然后更新root结点，这样自底向上可以减少大量重复的计算<br>时间复杂度是$O(n)$，空间复杂度是$O(n)$：需要使用系统栈空间</li></ul><h1 id="C-代码"><a href="#C-代码" class="headerlink" title="C++代码"></a>C++代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Definition for a binary tree node.</span><br><span class="line"> * struct TreeNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     TreeNode *left;</span><br><span class="line"> *     TreeNode *right;</span><br><span class="line"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span><br><span class="line"> * &#125;;</span><br><span class="line"> *&#x2F;</span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    &#x2F;&#x2F; 乘积 &#x3D; 某个节点下所有子节点的和 *（整个树的和 - 某个节点下所有子节点的和）</span><br><span class="line">    typedef long long LL;</span><br><span class="line">    LL rmax &#x3D; 0;</span><br><span class="line">    LL Total &#x3D; 0;</span><br><span class="line">    static const LL mod &#x3D; 1e9 + 7;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 后序遍历，遍历每个结点，更新最大值</span><br><span class="line">    LL TreeSum(TreeNode* root) &#123;</span><br><span class="line">        if (!root) return 0;</span><br><span class="line">        LL left &#x3D; TreeSum(root-&gt;left);</span><br><span class="line">        LL right &#x3D; TreeSum(root-&gt;right);</span><br><span class="line">        LL subsum &#x3D; left + right + root-&gt;val;</span><br><span class="line"></span><br><span class="line">        rmax &#x3D; max(rmax, (Total - subsum) * subsum); &#x2F;&#x2F; 不能先取模</span><br><span class="line">        return subsum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    int maxProduct(TreeNode* root) &#123;</span><br><span class="line">        if (!root) return 0;</span><br><span class="line">        Total &#x3D; TreeSum(root);</span><br><span class="line">        rmax &#x3D; 0;</span><br><span class="line"></span><br><span class="line">        TreeSum(root);</span><br><span class="line">        return rmax % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><p><strong>写在最后</strong>：我的博客主要是对计算机领域所学知识的总结、回顾和思考，把每篇博客写得通俗易懂是我的目标，<font color=red size=3 face=STHeiti>分享技术和知识是一种快乐 </font>，非常欢迎大家和我一起交流学习，有任何问题都可以在评论区留言，也期待与您的深入交流（＾∀＾●）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/14/hello-world/"/>
      <url>/2020/02/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
