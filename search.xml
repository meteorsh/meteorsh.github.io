<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NumPy Basics</title>
      <link href="/posts/123321.html"/>
      <url>/posts/123321.html</url>
      
        <content type="html"><![CDATA[<p>The biggest benefit of NumPy arrays is the use of simple array expressions to complete a variety of data manipulation tasks without the need to write some loops.</p><a id="more"></a><div align=center><img src="https://img-blog.csdnimg.cn/20200306135207615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div><h1 id="4-1-NumPy-ndarray"><a href="#4-1-NumPy-ndarray" class="headerlink" title="4.1 NumPy ndarray"></a>4.1 NumPy ndarray</h1><p>NumPy, short for Numerical Python, is the fundamental package required for high performance scientific computing and data analysis.</p><p>One of the key features of NumPy is its N-dimensional array object, or <strong>ndarray</strong>, which<br>is a fast, flexible container for large data sets in Python. </p><p>Whenever we see “array”, “Numpy array”, or “ndarray” in this book, with few exceptions they all refer to the same thing: the <strong>ndarray object</strong></p><p>A ndarray example</p><pre><code>array([[7, 5],       [2, 3]])</code></pre><hr><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npmy_arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span>my_list <span class="token operator">=</span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Run time</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">%</span>time my_arr2 <span class="token operator">=</span> my_arr <span class="token operator">*</span> <span class="token number">2</span><span class="token operator">%</span>time my_list <span class="token operator">=</span> my_list <span class="token operator">*</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>CPU times: user 3.99 ms, sys: 5.66 ms, total: 9.64 msWall time: 13.1 msCPU times: user 20.3 ms, sys: 9.21 ms, total: 29.5 msWall time: 39.1 ms</code></pre><p>As we can see Numpy method is much faster than Python method, and cost less space.</p><h2 id="4-1-1-Create-ndarray"><a href="#4-1-1-Create-ndarray" class="headerlink" title="4.1.1 Create ndarray"></a>4.1.1 Create ndarray</h2><p>The easiest way to create an array is to use the <strong>array</strong> function</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># data1 is a list</span>data1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>array1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data1<span class="token punctuation">)</span>array1array1<span class="token punctuation">.</span>shape<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>(2, 3)</code></pre><pre class="line-numbers language-python"><code class="language-python">data2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4.1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>array2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>array2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>array2<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>[5.  4.1 2.  8. ]float64</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[0. 0. 0. 0.]</code></pre><p>To create a higher dimensional array with these methods, pass a <strong>tuple</strong> for the shape</p><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># parameter Shape: int or tuple int</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[0., 0., 0., 0., 0.],       [0., 0., 0., 0., 0.]])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1., 1., 1., 1.],       [1., 1., 1., 1.],       [1., 1., 1., 1.]])</code></pre><p><strong>empty</strong> creates an array without initializing its values to any particular value:</p><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[1.28822975e-231, 1.28822975e-231, 1.97626258e-323],        [0.00000000e+000, 0.00000000e+000, 0.00000000e+000]]])</code></pre><p><strong>arange</strong> is an array-valued version of the built-in Python <strong>range</strong> function:</p><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1, 3, 5, 7, 9])</code></pre><pre class="line-numbers language-python"><code class="language-python">list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># function range return an iterable object, not a list</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[1, 3, 5, 7, 9]</code></pre><p><strong>ones_like</strong> takes another array and produces a ones array of the same shape and dtype</p><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>ones_like<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1, 1, 1])</code></pre><p>It will tell us the right parameters format, so we don’t need to memory them.</p><div align=center><img src="https://img-blog.csdnimg.cn/20200301215132838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div><p>Create a square N * N identity matrix (1’s on the digonal and 0’s elsewhere)</p><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>identity<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1., 0., 0., 0.],       [0., 1., 0., 0.],       [0., 0., 1., 0.],       [0., 0., 0., 1.]])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1., 0., 0., 0.],       [0., 1., 0., 0.],       [0., 0., 1., 0.]])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>full<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[5, 5, 5],       [5, 5, 5]])</code></pre><p>Table 4-1. Array creation functions</p><table><thead><tr><th align="left">Function</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">array</td><td align="left">Convert input data (list, tuple, array, or other sequence type) to an ndarray either by inferring a dtype or explicitly specifying a dtype. Copies the input data by default.</td></tr><tr><td align="left">asarray</td><td align="left">Convert input to ndarray, but do not copy if the input is already an ndarray</td></tr><tr><td align="left">arange</td><td align="left">Like the built-in range but returns an ndarray instead of a list.</td></tr><tr><td align="left">ones, ones_like</td><td align="left">Produce an array of all 1’s with the given shape and dtype. ones_like takes another array and produces a ones array of the same shape and dtype.</td></tr><tr><td align="left">zeros, zeros_like</td><td align="left">Like ones and ones_like but producing arrays of 0’s instead</td></tr><tr><td align="left">empty, empty_like</td><td align="left">Create new arrays by allocating new memory, but do not populate with any values like ones and zeros</td></tr><tr><td align="left">eye, identity</td><td align="left">Create a square N x N identity matrix (1’s on the diagonal and 0’s elsewhere)</td></tr></tbody></table><h2 id="4-1-2-Data-Types-for-ndarrays"><a href="#4-1-2-Data-Types-for-ndarrays" class="headerlink" title="4.1.2 Data Types for ndarrays"></a>4.1.2 Data Types for ndarrays</h2><p>The data type or dtype is a special object containing the information the ndarray needs to interpret a chunk of memory as a particular type of data:</p><p>The default dtype is <strong>float64</strong></p><pre class="line-numbers language-python"><code class="language-python">arr1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float64<span class="token punctuation">)</span>arr2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3.1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>arr3 <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># use default dtype</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr1<span class="token punctuation">.</span>dtype<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>dtype(&#39;float64&#39;)</code></pre><pre class="line-numbers language-python"><code class="language-python">arr1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1., 2., 3.])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2<span class="token punctuation">.</span>dtype<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>dtype(&#39;int32&#39;)</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1, 2, 3], dtype=int32)</code></pre><pre class="line-numbers language-python"><code class="language-python">arr3<span class="token punctuation">.</span>dtype<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>dtype(&#39;float64&#39;)</code></pre><pre class="line-numbers language-python"><code class="language-python">arr3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1., 1., 1., 1.])</code></pre><p>Table 4-2. NumPy data types</p><table><thead><tr><th align="left">Type</th><th align="left">Type Code</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">int8, uint8</td><td align="left">i1, u1</td><td align="left">Signed and unsigned 8-bit (1 byte) integer types</td></tr><tr><td align="left">int16, uint16</td><td align="left">i2, u2</td><td align="left">Signed and unsigned 16-bit integer types</td></tr><tr><td align="left">int32, uint32</td><td align="left">i4, u4</td><td align="left">Signed and unsigned 32-bit integer types</td></tr><tr><td align="left">int64, uint64</td><td align="left">i8, u8 S</td><td align="left">igned and unsigned 32-bit integer types</td></tr><tr><td align="left">float16</td><td align="left">f2</td><td align="left">Half-precision floating point</td></tr><tr><td align="left">float32</td><td align="left">f4 or f</td><td align="left">Standard single-precision floating point. Compatible with C float</td></tr><tr><td align="left">float64, float128</td><td align="left">f8 or d</td><td align="left">Standard double-precision floating point. Compatible with C double and Python float object</td></tr><tr><td align="left">float128</td><td align="left">f16 or g</td><td align="left">Extended-precision floating point</td></tr><tr><td align="left">complex64, complex128, complex256</td><td align="left">c8, c16, c32</td><td align="left">Complex numbers represented by two 32, 64, or 128 floats, respectively</td></tr><tr><td align="left">bool</td><td align="left">?</td><td align="left">Boolean type storing True and False values</td></tr><tr><td align="left">object</td><td align="left">O</td><td align="left">Python object type</td></tr><tr><td align="left">string_</td><td align="left">S</td><td align="left">Fixed-length string type (1 byte per character) . For example, to create a string dtype with length 10, use ‘S10’.</td></tr><tr><td align="left">unicode_</td><td align="left">U</td><td align="left">Fixed-length unicode type (number of bytes platform specific). Same specification semantics as string_ (e.g. ‘U10’).</td></tr></tbody></table><h2 id="4-1-3-Operations-between-Arrays-and-Scalars"><a href="#4-1-3-Operations-between-Arrays-and-Scalars" class="headerlink" title="4.1.3 Operations between Arrays and Scalars"></a>4.1.3 Operations between Arrays and Scalars</h2><p>Arrays are important because they enable you to express batch operations on data without any <strong>for</strong> loops. This is usually called <strong>vectorization</strong>.</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1., 2., 3.],       [4., 5., 6.]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">*</span> arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 1.,  4.,  9.],       [16., 25., 36.]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token number">1</span> <span class="token operator">/</span> arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1.        , 0.5       , 0.33333333],       [0.25      , 0.2       , 0.16666667]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">**</span> <span class="token number">0.5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1.        , 1.41421356, 1.73205081],       [2.        , 2.23606798, 2.44948974]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 0.,  4.,  1.],       [ 7.,  2., 12.]])</code></pre><p>Comparing between two arrays of the same size return bool array</p><pre class="line-numbers language-python"><code class="language-python">arr2 <span class="token operator">></span> arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[False,  True, False],       [ True, False,  True]])</code></pre><p>Operations between differently sized arrays is called <strong>broadcasting</strong>. Having a deep understanding of broadcasting is not neccessay for most of this book.</p><h2 id="4-1-4-Basic-Indexing-and-Slicing"><a href="#4-1-4-Basic-Indexing-and-Slicing" class="headerlink" title="4.1.4 Basic Indexing and Slicing"></a>4.1.4 Basic Indexing and Slicing</h2><p>An important first distinction frome lists is that <strong>array slice</strong> are <strong>views</strong> on the original array. This means that <strong>the data is not copied</strong>, and any motifications to the view will be reflected in the source array.</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># any motifications to the view will be reflected in the source array:</span>arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 0,  1,  2,  3,  4, 12, 12, 12,  8,  9])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># array slice is not copied</span>arr_slice <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span>arr_slice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span>arr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>array([  0,   1,   2,   3,   4,  12, 100,  12,   8,   9])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># list slice is copied</span>list_ <span class="token operator">=</span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>list_slice <span class="token operator">=</span> list_<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span>list_slice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">list_<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</code></pre><p>Notes: As <strong>Numpy has been designed with large data</strong> use cases in mind, you could imagine performance and memory problems if Numpy insisted on copying data left and right.</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># array slice is copied if you use copy()</span>arr_slice <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>arr_slice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">888</span>arr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>array([  0,   1,   2,   3,   4,  12, 100,  12,   8,   9])</code></pre><p>higher dimensional array index</p><pre class="line-numbers language-python"><code class="language-python">arr2d <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>arr2d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([1, 2])</code></pre><p>You can pass a comma-separated list of indices to select <strong>individual</strong> elements.</p><p>So these are equivalent:</p><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>2</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>2</code></pre><p>Note: they are different if it is a slice</p><div align=center><img src="https://img-blog.csdnimg.cn/20200302145526390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div><h3 id="4-1-4-1-Note-the-function-of-arr3d-2-1-0"><a href="#4-1-4-1-Note-the-function-of-arr3d-2-1-0" class="headerlink" title="4.1.4.1 Note the function of arr3d[ :2, 1:, 0]"></a>4.1.4.1 Note the function of arr3d[ :2, 1:, 0]</h3><p><font color=red size=3 face=STHeit>use comma <code>,</code> to process each dimension</font></p><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># process each dimension</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1],       [3]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># equivalent: tmp = arr2d[:2] and tmp[:1]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([[1, 2]])</code></pre><p>3D array</p><pre class="line-numbers language-python"><code class="language-python">arr3d <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">]</span>                 <span class="token punctuation">]</span><span class="token punctuation">)</span>arr3d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>array([[[ 1,  2,  3],        [ 4,  5,  6]],       [[ 7,  8,  9],        [10, 11, 12]]])</code></pre><p><font color=red size=3 face=STHeit>integer indexes return lower dimensonal axes</font></p><pre class="line-numbers language-python"><code class="language-python">arr3d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 2, 3],       [4, 5, 6]])</code></pre><p><font color=red size=3 face=STHeit>colon<code>:</code> return the same dimensional axes</font></p><pre class="line-numbers language-python"><code class="language-python">arr3d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[1, 2, 3],        [4, 5, 6]]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr3d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([4, 5, 6])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr3d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr3d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[ 1,  2,  3],        [ 0,  0,  0]],       [[ 7,  8,  9],        [10, 11, 12]]])</code></pre><p>Note that in all of these cases where subsections of the array have been selected, the returned arrays are <strong>views</strong>, not copied.</p><p><strong>Indexing with slices</strong></p><pre class="line-numbers language-python"><code class="language-python">arr2d <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>                 <span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 2, 3],       [4, 5, 6],       [7, 8, 9]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">.</span>shape<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>(3, 3)</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># same dimensionality</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 2, 3]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># lower dimensionality</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1, 2, 3])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([4, 5])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1],       [4],       [7]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[2, 3],       [5, 6]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[4, 5, 6]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr_test <span class="token operator">=</span> arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>arr_test <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 2, 3],       [4, 5, 6],       [7, 8, 9]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 0, 0],       [4, 0, 0],       [7, 8, 9]])</code></pre><div align=left><img src="https://img-blog.csdnimg.cn/2020030214382943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div><h2 id="4-1-5-Boolean-Indexing"><a href="#4-1-5-Boolean-Indexing" class="headerlink" title="4.1.5 Boolean Indexing"></a>4.1.5 Boolean Indexing</h2><pre class="line-numbers language-python"><code class="language-python">names <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span> <span class="token string">'Will'</span><span class="token punctuation">,</span> <span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token string">'Will'</span><span class="token punctuation">,</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span> <span class="token string">'Joe'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>names<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>array([&#39;Bob&#39;, &#39;Joe&#39;, &#39;Will&#39;, &#39;Bob&#39;, &#39;Will&#39;, &#39;Joe&#39;, &#39;Joe&#39;], dtype=&#39;&lt;U4&#39;)</code></pre><pre class="line-numbers language-python"><code class="language-python">data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 2.44492395, -1.52038895,  0.39391998, -0.31685538],       [-0.08518141,  0.38465576, -0.59752249, -1.9550803 ],       [-0.47663211, -0.23931735,  0.71509259,  0.11847852],       [ 1.6580849 ,  0.45994775,  0.86858598, -0.7588714 ],       [-0.17831281, -0.3973996 ,  0.48140504, -0.20286526],       [ 0.02599393,  0.37176764, -0.83564336, -0.83812596],       [-0.03231511, -1.66515562,  0.04271532,  0.55256624]])</code></pre><pre class="line-numbers language-python"><code class="language-python">names <span class="token operator">==</span> <span class="token string">'Bob'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ True, False, False,  True, False, False, False])</code></pre><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">[</span>names <span class="token operator">==</span> <span class="token string">'Bob'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 2.44492395, -1.52038895,  0.39391998, -0.31685538],       [ 1.6580849 ,  0.45994775,  0.86858598, -0.7588714 ]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># First dimension fetch data based on boolean</span><span class="token comment" spellcheck="true"># Second dimension fectch data based on slice</span>data<span class="token punctuation">[</span>names <span class="token operator">==</span> <span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>array([[-1.52038895,  0.39391998, -0.31685538],       [ 0.45994775,  0.86858598, -0.7588714 ]])</code></pre><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">[</span>names <span class="token operator">==</span> <span class="token string">'Bob'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 1.6580849 ,  0.45994775,  0.86858598, -0.7588714 ]])</code></pre><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">[</span>names <span class="token operator">==</span> <span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([-0.31685538, -0.7588714 ])</code></pre><p>To select everything but ‘Bob’, you can either use <code>!=</code> or negate the condition using <code>~</code></p><pre class="line-numbers language-python"><code class="language-python">names <span class="token operator">!=</span> <span class="token string">'Bob'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([False,  True,  True, False,  True,  True,  True])</code></pre><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">(</span>names <span class="token operator">==</span> <span class="token string">'Bob'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[-0.08518141,  0.38465576, -0.59752249, -1.9550803 ],       [-0.47663211, -0.23931735,  0.71509259,  0.11847852],       [-0.17831281, -0.3973996 ,  0.48140504, -0.20286526],       [ 0.02599393,  0.37176764, -0.83564336, -0.83812596],       [-0.03231511, -1.66515562,  0.04271532,  0.55256624]])</code></pre><p>Selecting two of the three names to combine mutiple boolean conditions, use boolean arithmetic operators like <code>&amp;(and)</code> and <code>|(or)</code>:</p><p>Note: The Python keywords <strong>and</strong> and <strong>or</strong> do not work with boolean arrays.</p><pre class="line-numbers language-python"><code class="language-python">mask <span class="token operator">=</span> <span class="token punctuation">(</span>names <span class="token operator">==</span> <span class="token string">'Bob'</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>names <span class="token operator">==</span> <span class="token string">'Will'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">mask<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ True, False,  True,  True,  True, False, False])</code></pre><pre class="line-numbers language-python"><code class="language-python">data1 <span class="token operator">=</span> data<span class="token punctuation">[</span>mask<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># make a copy</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">data1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 2.44492395, -1.52038895,  0.39391998, -0.31685538],       [-0.47663211, -0.23931735,  0.71509259,  0.11847852],       [ 1.6580849 ,  0.45994775,  0.86858598, -0.7588714 ],       [-0.17831281, -0.3973996 ,  0.48140504, -0.20286526]])</code></pre><pre class="line-numbers language-python"><code class="language-python">data1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">data1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 2.44492395, -1.52038895,  0.39391998, -0.31685538],       [ 0.        ,  0.        ,  0.        ,  0.        ],       [ 1.6580849 ,  0.45994775,  0.86858598, -0.7588714 ],       [-0.17831281, -0.3973996 ,  0.48140504, -0.20286526]])</code></pre><pre class="line-numbers language-python"><code class="language-python">data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 2.44492395, -1.52038895,  0.39391998, -0.31685538],       [-0.08518141,  0.38465576, -0.59752249, -1.9550803 ],       [-0.47663211, -0.23931735,  0.71509259,  0.11847852],       [ 1.6580849 ,  0.45994775,  0.86858598, -0.7588714 ],       [-0.17831281, -0.3973996 ,  0.48140504, -0.20286526],       [ 0.02599393,  0.37176764, -0.83564336, -0.83812596],       [-0.03231511, -1.66515562,  0.04271532,  0.55256624]])</code></pre><p>Note: <font color=red size=3 face=STHeit>Selecting data from an array by boolean indexing always creates a copy of the data.</font><br>Set all of the negative values in data to 0</p><pre class="line-numbers language-python"><code class="language-python">data <span class="token operator">&lt;</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[False,  True, False,  True],       [ True, False,  True,  True],       [ True,  True, False, False],       [False, False, False,  True],       [ True,  True, False,  True],       [False, False,  True,  True],       [ True,  True, False, False]])</code></pre><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">[</span>data <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[2.44492395, 0.        , 0.39391998, 0.        ],       [0.        , 0.38465576, 0.        , 0.        ],       [0.        , 0.        , 0.71509259, 0.11847852],       [1.6580849 , 0.45994775, 0.86858598, 0.        ],       [0.        , 0.        , 0.48140504, 0.        ],       [0.02599393, 0.37176764, 0.        , 0.        ],       [0.        , 0.        , 0.04271532, 0.55256624]])</code></pre><h2 id="4-1-6-Fancy-Indexing"><a href="#4-1-6-Fancy-Indexing" class="headerlink" title="4.1.6 Fancy Indexing"></a>4.1.6 Fancy Indexing</h2><p>Fancy indexing is a term adpoted by Numpy to describe indexing using integer arrays.</p><p>Case 1: Basic Indexing and Slicing</p><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([  2,   3,   4,  12, 100,  12,   8,   9])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>0</code></pre><p>Case 2: Boolean Indexing</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>bool_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> np<span class="token punctuation">.</span>bool<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">bool_<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ True, False,  True, False])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span>bool_<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1, 4])</code></pre><h3 id="4-1-6-1-Key-of-Fancy-Indexing"><a href="#4-1-6-1-Key-of-Fancy-Indexing" class="headerlink" title="4.1.6.1 Key of Fancy Indexing"></a>4.1.6.1 Key of Fancy Indexing</h3><p>Case 3: Fancy Indexing</p><ul><li>Return a <strong>copy</strong> of original array</li><li><font color=red size=3 face=STHeit>To select out a subset of the rows in a particular order</font>, you can simply pass a <strong>list</strong> or <strong>ndaray</strong> of integers specifying the desired order</li></ul><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># [2,3,1,0] is a list</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([3, 4, 2, 1])</code></pre><pre class="line-numbers language-python"><code class="language-python">index_arr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">index_arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([3, 2, 0, 1])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span>index_arr<span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># index_arr is a ndarray</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([4, 3, 1, 2])</code></pre><p>I think Boolean Indexing is a special Fancy Indexing.</p><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1, 2, 3, 4])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#(1,) (2,)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([2, 3])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#(-1,) (-3,)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([4, 2])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 0,  1,  2,  3],       [ 4,  5,  6,  7],       [ 8,  9, 10, 11],       [12, 13, 14, 15],       [16, 17, 18, 19],       [20, 21, 22, 23],       [24, 25, 26, 27],       [28, 29, 30, 31]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># select each dimension</span>arr<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># (1,0) (5,3) (7,1) (2,2)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([ 4, 23, 29, 10])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># (1,:) (5,:) (7,:) (2,:)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 4,  5,  6,  7],       [20, 21, 22, 23],       [28, 29, 30, 31],       [ 8,  9, 10, 11]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Can be understood as: first exchange the second dimension, and then select all the first dimensions</span>arr<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([[ 4,  7,  5,  6],       [20, 23, 21, 22],       [28, 31, 29, 30],       [ 8, 11,  9, 10]])</code></pre><h2 id="4-1-7-Transposing-Arrays-and-Swapping-Axes"><a href="#4-1-7-Transposing-Arrays-and-Swapping-Axes" class="headerlink" title="4.1.7 Transposing Arrays and Swapping Axes"></a>4.1.7 Transposing Arrays and Swapping Axes</h2><p><font color=red size=3 face=STHeit>Transposing</font> is a special form of reshaping which similarly returns <font color=red size=3 face=STHeit>a view</font> on the underlying data without copying anything.</p><p><font color=red size=3 face=STHeit>Transposing: </font><code>arr[0, 1, 2] = arr.T[2,1,0]</code> After transposing the axes is from dn to d1</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[ 0,  1,  2,  3],        [ 4,  5,  6,  7],        [ 8,  9, 10, 11]],       [[12, 13, 14, 15],        [16, 17, 18, 19],        [20, 21, 22, 23]]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>6</code></pre><p>arr size:$2<em>3</em>4$</p><p>arr.T size:$4<em>3</em>2$</p><pre class="line-numbers language-python"><code class="language-python">arr_T <span class="token operator">=</span> arr<span class="token punctuation">.</span>Tarr<span class="token punctuation">.</span>T <span class="token comment" spellcheck="true"># a view of arr</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([[[ 0, 12],        [ 4, 16],        [ 8, 20]],       [[ 1, 13],        [ 5, 17],        [ 9, 21]],       [[ 2, 14],        [ 6, 18],        [10, 22]],       [[ 3, 15],        [ 7, 19],        [11, 23]]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr_T<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3333</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[   0,    1,    2,    3],        [3333,    5,    6,    7],        [   8,    9,   10,   11]],       [[  12,   13,   14,   15],        [3333,   17,   18,   19],        [  20,   21,   22,   23]]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr_T<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># arr_T is the array after arr transposing</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>6</code></pre><p>Computing the inner matrix product $X^TX$ using <strong>np.dot</strong></p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[3, 3, 2, 2],       [1, 3, 2, 1],       [2, 2, 3, 1]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># inner matrix product</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>arr<span class="token punctuation">.</span>T<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([[14, 16, 14,  9],       [16, 22, 18, 11],       [14, 18, 17,  9],       [ 9, 11,  9,  6]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token comment" spellcheck="true"># size 2*3*4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[ 0,  1,  2,  3],        [ 4,  5,  6,  7],        [ 8,  9, 10, 11]],       [[12, 13, 14, 15],        [16, 17, 18, 19],        [20, 21, 22, 23]]])</code></pre><p>transpose change axes (0,1,2) to (1,0,2)</p><p>So for example the index (1,2,3) will be index(2,1,3) </p><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># size 2 * 3 * 4 </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[ 0,  1,  2,  3],        [12, 13, 14, 15]],       [[ 4,  5,  6,  7],        [16, 17, 18, 19]],       [[ 8,  9, 10, 11],        [20, 21, 22, 23]]])</code></pre><p>ndarray has the method <strong>swapaxes</strong> which takes a pair of axis numbers</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token comment" spellcheck="true"># size 2*3*4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[ 0,  1,  2,  3],        [ 4,  5,  6,  7],        [ 8,  9, 10, 11]],       [[12, 13, 14, 15],        [16, 17, 18, 19],        [20, 21, 22, 23]]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># size 2*4*3  return a copy</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[[ 0,  4,  8],        [ 1,  5,  9],        [ 2,  6, 10],        [ 3,  7, 11]],       [[12, 16, 20],        [13, 17, 21],        [14, 18, 22],        [15, 19, 23]]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>21</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>swapaxes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>21</code></pre><h1 id="4-2-Universal-Functions-Fast-Element-wise-Array-Functions"><a href="#4-2-Universal-Functions-Fast-Element-wise-Array-Functions" class="headerlink" title="4.2 Universal Functions: Fast Element-wise Array Functions"></a>4.2 Universal Functions: Fast Element-wise Array Functions</h1><p>A universal function, or <strong>ufunc</strong>, is a function that performs elementwise operations on data in ndarrays.You can think of them as fast<strong>vectorized wrappers</strong> for simple functions.</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([0.        , 1.        , 1.41421356, 1.73205081, 2.        ,       2.23606798, 2.44948974, 2.64575131, 2.82842712, 3.        ])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1.00000000e+00, 2.71828183e+00, 7.38905610e+00, 2.00855369e+01,       5.45981500e+01, 1.48413159e+02, 4.03428793e+02, 1.09663316e+03,       2.98095799e+03, 8.10308393e+03])</code></pre><pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 0.60058561, -1.30032727, -1.17669429, -1.16293769,  1.6389972 ,       -0.53815749, -0.14142643,  1.02354324])</code></pre><pre class="line-numbers language-python"><code class="language-python">y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([-1.61302358, -0.354913  , -0.1137763 ,  0.08010182,  0.07466485,       -1.39663575,  0.77496037,  1.75997402])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 0.60058561, -0.354913  , -0.1137763 ,  0.08010182,  1.6389972 ,       -0.53815749,  0.77496037,  1.75997402])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 7.50554328, -0.61609252,  3.00616797, -6.02160661,  3.83440266,       -6.53201864,  7.47775811])</code></pre><pre class="line-numbers language-python"><code class="language-python">remainder<span class="token punctuation">,</span> whole_part <span class="token operator">=</span> np<span class="token punctuation">.</span>modf<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">remainder<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 0.50554328, -0.61609252,  0.00616797, -0.02160661,  0.83440266,       -0.53201864,  0.47775811])</code></pre><pre class="line-numbers language-python"><code class="language-python">whole_part<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 7., -0.,  3., -6.,  3., -6.,  7.])</code></pre><p>Universal Function accept a optional parameter <strong>out</strong></p><pre class="line-numbers language-python"><code class="language-python">arr <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 7.50554328, -0.61609252,  3.00616797, -6.02160661,  3.83440266,       -6.53201864,  7.47775811])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>/usr/local/lib/python3.7/site-packages/ipykernel_launcher.py:1: RuntimeWarning: invalid value encountered in sqrt  &quot;&quot;&quot;Entry point for launching an IPython kernel.array([2.73962466,        nan, 1.73383043,        nan, 1.95816308,              nan, 2.73454898])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([2.73962466,        nan, 1.73383043,        nan, 1.95816308,              nan, 2.73454898])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([-0.40366505, -1.98954395, -1.05020216, -0.01818649, -1.08323461,        0.0976977 , -1.45609853, -0.99915274, -1.88666922, -0.10298285])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([-1., -1., -1., -1., -1.,  1., -1., -1., -1., -1.])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>arr2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>copysign<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># copy arr2's sign to arr</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([0.40366505, 1.98954395, 1.05020216, 0.01818649, 1.08323461,       0.0976977 , 1.45609853, 0.99915274, 1.88666922, 0.10298285])</code></pre><h2 id="4-2-1-API-https-www-geeksforgeeks-org-Google-Dash"><a href="#4-2-1-API-https-www-geeksforgeeks-org-Google-Dash" class="headerlink" title="4.2.1 API https://www.geeksforgeeks.org/  , Google, Dash"></a>4.2.1 API <a href="https://www.geeksforgeeks.org/" target="_blank" rel="noopener">https://www.geeksforgeeks.org/</a>  , Google, Dash</h2><p>You don’t need to remember all the function. When you need it, just search the function in Google or Dash.</p><div align=center><img src="https://img-blog.csdnimg.cn/20200303151646816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div><h2 id="4-2-2-A-listing-of-available-ufuncs"><a href="#4-2-2-A-listing-of-available-ufuncs" class="headerlink" title="4.2.2 A listing of available ufuncs"></a>4.2.2 A listing of available ufuncs</h2><p>Table 4-3. Unary ufuncs</p><table><thead><tr><th align="left">Function</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">abs, fabs</td><td align="left">Compute the absolute value element-wise for integer, floating point, or complex values.Use fabs as a faster alternative for non-complex-valued data</td></tr><tr><td align="left">sqrt</td><td align="left">Compute the square root of each element. Equivalent to arr ** 0.5</td></tr><tr><td align="left">square</td><td align="left">Compute the square of each element. Equivalent to arr ** 2</td></tr><tr><td align="left">exp</td><td align="left">Compute the exponent $e^x$ of each element</td></tr><tr><td align="left">log, log10, log2, log1p</td><td align="left">Natural logarithm (base e), log base 10, log base 2, and log(1 + x), respectively</td></tr><tr><td align="left">sign</td><td align="left">Compute the sign of each element: 1 (positive), 0 (zero), or -1 (negative)</td></tr><tr><td align="left">ceil</td><td align="left">Compute the ceiling of each element, i.e. the smallest integer greater than or equal to each element</td></tr><tr><td align="left">floor</td><td align="left">Compute the floor of each element, i.e. the largest integer less than or equal to each element</td></tr><tr><td align="left">rint</td><td align="left">Round elements to the nearest integer, preserving the dtype</td></tr><tr><td align="left">modf</td><td align="left">Return fractional and integral parts of array as separate array</td></tr><tr><td align="left">isnan</td><td align="left">Return boolean array indicating whether each value is NaN (Not a Number)</td></tr><tr><td align="left">isfinite, isinf</td><td align="left">Return boolean array indicating whether each element is finite (non-inf, non-NaN) or infinite, respectively</td></tr><tr><td align="left">cos, cosh, sin, sinh, tan, tanh</td><td align="left">Regular and hyperbolic trigonometric functions</td></tr><tr><td align="left">arccos, arccosh, arcsin, arcsinh, arctan, arctanh</td><td align="left">Inverse trigonometric functions</td></tr><tr><td align="left">logical_not</td><td align="left">Compute truth value of not x element-wise. Equivalent to -arr</td></tr></tbody></table><p>Table 4-4. Binary universal functions</p><table><thead><tr><th align="left">Function</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">add</td><td align="left">Add corresponding elements in arrays</td></tr><tr><td align="left">subtract</td><td align="left">Subtract elements in second array from first array</td></tr><tr><td align="left">multiply</td><td align="left">Multiply array elements</td></tr><tr><td align="left">divide, floor_divide</td><td align="left">Divide or floor divide (truncating the remainder)</td></tr><tr><td align="left">power</td><td align="left">Raise elements in first array to powers indicated in second array</td></tr><tr><td align="left">maximum, fmax</td><td align="left">Element-wise maximum. fmax ignores NaN</td></tr><tr><td align="left">minimum, fmin</td><td align="left">Element-wise minimum. fmin ignores NaN</td></tr><tr><td align="left">mod</td><td align="left">Element-wise modulus (remainder of division)</td></tr><tr><td align="left">copysign</td><td align="left">Copy sign of values in second argument to values in first argument</td></tr><tr><td align="left">greater, greater_equal, less, less_equal, equal, not_equal</td><td align="left">Perform element-wise comparison, yielding boolean array. Equivalent to infix operators &gt;, &gt;=, &lt;, &lt;=, ==, !=</td></tr><tr><td align="left">logical_and,logical_or, logical_xor</td><td align="left">Compute element-wise truth value of logical operation. Equivalent to infix operators <code>&amp;</code>, `</td></tr></tbody></table><h1 id="4-3-Data-Processing-Using-Arrays"><a href="#4-3-Data-Processing-Using-Arrays" class="headerlink" title="4.3 Data Processing Using Arrays"></a>4.3 Data Processing Using Arrays</h1><h2 id="4-3-0-np-meshgrid"><a href="#4-3-0-np-meshgrid" class="headerlink" title="4.3.0 np.meshgrid()"></a>4.3.0 np.meshgrid()</h2><p>The <strong>np.meshgrid</strong> function takes two 1D arrays and produces two 2D matrices corresponding to all pairs of (x, y) in the two arrays:</p><pre class="line-numbers language-python"><code class="language-python">pointx <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pointy <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>matrices <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>pointx<span class="token punctuation">,</span>pointy<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">matrices<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[array([[1, 2, 3],        [1, 2, 3]]), array([[-1, -1, -1],        [-2, -2, -2]])]</code></pre><pre class="line-numbers language-python"><code class="language-python">xs<span class="token punctuation">,</span> ys <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>pointx<span class="token punctuation">,</span>pointy<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">xs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 2, 3],       [1, 2, 3]])</code></pre><pre class="line-numbers language-python"><code class="language-python">ys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[-1, -1, -1],       [-2, -2, -2]])</code></pre><p><strong>How to understand np.meshgrid()</strong></p><div align=center><img src="https://img-blog.csdnimg.cn/20200303165432510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="80%"/></div><pre class="line-numbers language-python"><code class="language-python">z <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>xs <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> ys <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">z<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1.41421356, 2.23606798, 3.16227766],       [2.23606798, 2.82842712, 3.60555128]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>z<span class="token punctuation">,</span> cmap <span class="token operator">=</span> plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token punctuation">;</span> plt<span class="token punctuation">.</span>colorbar<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Image plot of $\sqrt{x ^ 2 + y ^ 2}$ for a grid of values"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>Text(0.5, 1.0, &#39;Image plot of $\\sqrt{x ^ 2 + y ^ 2}$ for a grid of values&#39;)</code></pre><p><img src="output_203_1.png" alt="png"></p><p>Figure 4-3. Plot of function evaluated on grid</p><p>Here I used the matplotlib function <strong>imshow</strong> to create an image plot<br>from a 2D array of function values.</p><h2 id="4-3-1-Expressing-Conditional-Logic-as-Array-Operations"><a href="#4-3-1-Expressing-Conditional-Logic-as-Array-Operations" class="headerlink" title="4.3.1 Expressing Conditional Logic as Array Operations"></a>4.3.1 Expressing Conditional Logic as Array Operations</h2><p>The <strong>numpy.where</strong> function is a vectorized version of the ternary expression <strong>x if condtion else y</strong></p><pre class="line-numbers language-python"><code class="language-python">xarr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>yarr <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cond <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">result <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">if</span> c <span class="token keyword">else</span> y <span class="token keyword">for</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> c <span class="token keyword">in</span> zip<span class="token punctuation">(</span>xarr<span class="token punctuation">,</span> yarr<span class="token punctuation">,</span> cond<span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">result<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[1, -2, 3, 4]</code></pre><p>This has multiple problems. First, it will not be very fast for large arrays (because all the work is being done in <strong>pure Python</strong>). Secondly, it will not work with multidimensional arrays.</p><p>With <strong>np.where</strong> you can write this very concisely</p><pre class="line-numbers language-python"><code class="language-python">result <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>cond<span class="token punctuation">,</span> xarr<span class="token punctuation">,</span> yarr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">result<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 1, -2,  3,  4])</code></pre><p>The second and third arguments to <strong>np.where</strong> don’t need to be arrays.A typical use of <strong>where</strong> in data analysis is to produce a new array of values based on another array.</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[-0.01139784,  0.40169215, -0.38962953],       [ 0.55216629,  0.48477693, -0.06194546],       [ 0.54855517,  0.17247726, -0.74025193],       [-0.39221758,  0.24833925,  1.15466766]])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>arr <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[-2.        ,  0.40169215, -2.        ],       [ 0.55216629,  0.48477693, -2.        ],       [ 0.54855517,  0.17247726, -2.        ],       [-2.        ,  0.24833925,  1.15466766]])</code></pre><p>The arrays passed to <strong>where</strong> can be more than just equal sizes array or scales.</p><h2 id="4-3-2-Mathematical-and-Statistical-Methods"><a href="#4-3-2-Mathematical-and-Statistical-Methods" class="headerlink" title="4.3.2 Mathematical and Statistical Methods"></a>4.3.2 Mathematical and Statistical Methods</h2><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># normally-distributed data</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div align=center><img src="https://img-blog.csdnimg.cn/20200306112618132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div><pre class="line-numbers language-python"><code class="language-python">arr <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[-1.7669711 ,  0.23033242, -0.66245059, -1.10571503],       [ 0.17697343,  0.09412475,  2.31777073, -0.44555725],       [-0.62426573,  1.75648072,  0.95977683, -0.61619976],       [-0.49642721,  0.45912091,  1.26163226,  0.06395789],       [ 1.66048345,  0.34056885, -1.54478641, -1.04533225]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 0,  1,  2],       [ 3,  4,  5],       [ 6,  7,  8],       [ 9, 10, 11],       [12, 13, 14]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Average of all numbers</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>7.0</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Sum of all numbers</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>105</code></pre><p>Functions like <strong>mean</strong> and <strong>sum</strong> take an optional <strong>axis</strong> argument<br>which computes the statistic over the given axis, resulting in an array<br>with one fewer dimension, or compressing the given axis</p><div align=center><img src="https://img-blog.csdnimg.cn/20200306120247492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="70%"/></div><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 0,  1,  2],       [ 3,  4,  5],       [ 6,  7,  8],       [ 9, 10, 11],       [12, 13, 14]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># arr[3][1] == 10</span><span class="token comment" spellcheck="true"># axis 1 is the direction 0->1->2 here</span>arr<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># compress axis 1 and here is (5, 3)‘s 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>array([ 1.,  4.,  7., 10., 13.])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>sum<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([30, 35, 40])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([30, 35, 40])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># dimension reduced</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 0,  3,  6,  9, 12])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Indices of maximum elements, respective</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([2, 2, 2, 2, 2])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 0,  1,  3,  6, 10, 15, 21, 28, 36, 45])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[0, 1, 2],       [3, 4, 5],       [6, 7, 8]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 0,  1,  2],       [ 3,  5,  7],       [ 9, 12, 15]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>cumprod<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[  0,   0,   0],       [  3,  12,  60],       [  6,  42, 336]])</code></pre><p>Table 4-5. Basic array statistical methods</p><table><thead><tr><th align="left">Method</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">sum</td><td align="left">Sum of all the elements in the array or along an axis. Zero-length arrays have sum 0.</td></tr><tr><td align="left">mean</td><td align="left">Arithmetic mean. Zero-length arrays have NaN mean.</td></tr><tr><td align="left">std, var</td><td align="left">Standard deviation and variance, respectively, with optional degrees of freedom adjustment (default denominator n).</td></tr><tr><td align="left">min, max</td><td align="left">Minimum and maximum.</td></tr><tr><td align="left">argmin, argmax</td><td align="left">Indices of minimum and maximum elements, respectively.</td></tr><tr><td align="left">cumsum</td><td align="left">Cumulative sum of elements starting from 0</td></tr><tr><td align="left">cumprod</td><td align="left">Cumulative product of elements starting from 1</td></tr></tbody></table><h2 id="4-3-3-Methods-for-Boolean-Arrays"><a href="#4-3-3-Methods-for-Boolean-Arrays" class="headerlink" title="4.3.3 Methods for Boolean Arrays"></a>4.3.3 Methods for Boolean Arrays</h2><p>Boolean values are coerced to 1(True) and 0(False) in the above methods.</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token punctuation">(</span>arr <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Number of positive values</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>46</code></pre><p>There are two additional methods, <strong>any</strong> and <strong>all</strong>, useful especially for boolean<br>arrays.</p><p><strong>any</strong> tests whether one or more values in an array is <strong>True</strong>, while <strong>all</strong> checks if every value<br>is <strong>True</strong></p><pre class="line-numbers language-python"><code class="language-python">bools <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">bools<span class="token punctuation">.</span>any<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>True</code></pre><pre class="line-numbers language-python"><code class="language-python">bools<span class="token punctuation">.</span>all<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>False</code></pre><pre class="line-numbers language-python"><code class="language-python">bools<span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>1</code></pre><h2 id="4-3-4-Sorting"><a href="#4-3-4-Sorting" class="headerlink" title="4.3.4 Sorting"></a>4.3.4 Sorting</h2><p>Like Python’s built-in list type, NumPy arrays  can be sorted in-place using the <strong>sort</strong> method</p><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([-0.05645386, -0.36224588, -1.29498701, -0.30476409, -0.46770012,        1.20385542,  1.47953717, -0.20565266])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([-1.29498701, -0.46770012, -0.36224588, -0.30476409, -0.20565266,       -0.05645386,  1.20385542,  1.47953717])</code></pre><h2 id="4-3-5-Unique-and-Other-Set-Logic"><a href="#4-3-5-Unique-and-Other-Set-Logic" class="headerlink" title="4.3.5 Unique and Other Set Logic"></a>4.3.5 Unique and Other Set Logic</h2><p>NumPy has some basic set operations for one-dimensional ndarrays. Probably<br>the most commonly used one is <strong>np.unique</strong>, which returns the sorted unique values in an array</p><pre class="line-numbers language-python"><code class="language-python">names <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token string">'Will'</span><span class="token punctuation">,</span><span class="token string">'Joe'</span><span class="token punctuation">,</span>  <span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token string">'Will'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>names<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([&#39;Bob&#39;, &#39;Joe&#39;, &#39;Will&#39;], dtype=&#39;&lt;U4&#39;)</code></pre><pre class="line-numbers language-python"><code class="language-python">names<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([&#39;Bob&#39;, &#39;Will&#39;, &#39;Joe&#39;, &#39;Bob&#39;, &#39;Will&#39;], dtype=&#39;&lt;U4&#39;)</code></pre><pre class="line-numbers language-python"><code class="language-python">ints <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>ints<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1, 2, 3, 5])</code></pre><p>Constract <strong>np.unique</strong> with the pure Python alternative</p><pre class="line-numbers language-python"><code class="language-python">sorted<span class="token punctuation">(</span>set<span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[&#39;Bob&#39;, &#39;Joe&#39;, &#39;Will&#39;]</code></pre><p>Another function, <strong>np.in1d</strong>, tests membership of the values in one array in another, returning a boolean array.</p><pre class="line-numbers language-python"><code class="language-python">values <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>in1d<span class="token punctuation">(</span>values<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ True,  True, False, False, False, False])</code></pre><p>Table 4-6. Array set operations</p><table><thead><tr><th align="left">Method</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">unique(x)</td><td align="left">Compute the sorted, unique elements in x</td></tr><tr><td align="left">intersect1d(x, y)</td><td align="left">Compute the sorted, common elements in x and y</td></tr><tr><td align="left">union1d(x, y)</td><td align="left">Compute the sorted union of elements</td></tr><tr><td align="left">in1d(x, y)</td><td align="left">Compute a boolean array indicating whether each element of x is contained in y</td></tr><tr><td align="left">setdiff1d(x, y)</td><td align="left">Set difference, elements in x that are not in y</td></tr><tr><td align="left">setxor1d(x, y)</td><td align="left">Set symmetric differences; elements that are in either of the arrays, but not both</td></tr></tbody></table><h1 id="4-4-File-Input-and-Output-with-Arrays"><a href="#4-4-File-Input-and-Output-with-Arrays" class="headerlink" title="4.4 File Input and Output with Arrays"></a>4.4 File Input and Output with Arrays</h1><p>NumPy is able to save and load data to and from disk either in text or binary format.<br>In later chapters you will learn about tools in pandas for reading tabular data into<br>memory.</p><h1 id="4-5-Linear-Algebra"><a href="#4-5-Linear-Algebra" class="headerlink" title="4.5 Linear Algebra"></a>4.5 Linear Algebra</h1><p>Linear algebra, like matrix multiplication, decompostions, determinants, and other square matrix math, is<br>an important part of any array library.</p><p>Unlike some languages like MATLAB, multiplying two-dimensional arrays with <code>*</code> is an element-wise product instead of a matrix dot product.</p><p>As such, there is a function dot, both <strong>an array<br>method, and a function in the numpy namespace</strong></p><pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 2, 3],       [4, 5, 6]])</code></pre><pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">*</span> x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 1,  4,  9],       [16, 25, 36]])</code></pre><pre class="line-numbers language-python"><code class="language-python">y <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[0, 1],       [2, 3],       [4, 5]])</code></pre><pre class="line-numbers language-python"><code class="language-python">x<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># ndarray function</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[16, 22],       [34, 49]])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># a function in numpy namespace</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[16, 22],       [34, 49]])</code></pre><pre class="line-numbers language-python"><code class="language-python">x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 2, 3],       [4, 5, 6]])</code></pre><pre class="line-numbers language-python"><code class="language-python">x @ np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># @ is also used in a matrix dot product</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([ 6., 15.])</code></pre><p><strong>numpy.linalg</strong>(linear algebra) has a standard set of matrix decompositions and things like inverse and determinant. These are implemented under the hood using the same industry-standard Fortran libraries used in other languages like MATLAB and R, such as like BLAS,LAPACK, or possibly(depending on your NumPy build) the Intel MKL</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>linalg <span class="token keyword">as</span> nplamatrix <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">npla<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[-46.76938498, -86.35815947, 129.96228838, -32.95425663],       [-22.31060821, -41.56709931,  62.01812792, -15.25370697],       [-20.35569284, -37.11177381,  54.70106286, -14.5358842 ],       [-30.82139292, -54.49869152,  81.79616404, -21.54068957]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr <span class="token operator">=</span> matrix<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>npla<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># np.dot(matrix, npla.inv(matrix))</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 1.00000000e+00, -5.73321716e-15, -4.64130813e-15,        -1.34965101e-16],       [ 1.03102760e-15,  1.00000000e+00, -1.13084465e-14,         6.16824551e-16],       [-6.92801263e-15, -9.06342203e-15,  1.00000000e+00,        -3.46276746e-15],       [ 1.61273987e-17, -4.13259316e-15, -9.54630608e-15,         1.00000000e+00]])</code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>round<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># decimals=2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[ 1., -0., -0., -0.],       [ 0.,  1., -0.,  0.],       [-0., -0.,  1., -0.],       [ 0., -0., -0.,  1.]])</code></pre><p>Table 4-7. Commonly-used numpy.linalg functions</p><table><thead><tr><th align="left">Function</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">diag</td><td align="left">Return the diagonal (or off-diagonal) elements of a square matrix as a 1D array, or convert a 1D array into a square matrix with zeros on the off-diagonal</td></tr><tr><td align="left">dot</td><td align="left">Matrix multiplication</td></tr><tr><td align="left">trace</td><td align="left">Compute the sum of the diagonal elements</td></tr><tr><td align="left">det</td><td align="left">Compute the matrix determinant</td></tr><tr><td align="left">eig</td><td align="left">Compute the eigenvalues and eigenvectors of a square matrix</td></tr><tr><td align="left">inv</td><td align="left">Compute the inverse of a square matrix</td></tr><tr><td align="left">pinv</td><td align="left">Compute the Moore-Penrose pseudo-inverse inverse of a square matrix</td></tr><tr><td align="left">qr</td><td align="left">Compute the QR decomposition</td></tr><tr><td align="left">svd</td><td align="left">Compute the singular value decomposition (SVD)</td></tr><tr><td align="left">solve</td><td align="left">Solve the linear system Ax = b for x, where A is a square matrix</td></tr><tr><td align="left">lstsq</td><td align="left">Compute the least-squares solution to y = Xb</td></tr></tbody></table><h1 id="4-6-Random-Number-Generation"><a href="#4-6-Random-Number-Generation" class="headerlink" title="4.6 Random Number Generation"></a>4.6 Random Number Generation</h1><p>The <strong>numpy.random</strong> module supplements the built-in Python <strong>random</strong> with functions for efficiently generating whole arrays of sample values from many kinds of probabiliry distributions. </p><p>Table 4-8. Partial list of numpy.random functions</p><table><thead><tr><th align="left">Function</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">seed</td><td align="left">Seed the random number generator</td></tr><tr><td align="left">permutation</td><td align="left">Return a random permutation of a sequence, or return a permuted range</td></tr><tr><td align="left">shuffle</td><td align="left">Randomly permute a sequence in place</td></tr><tr><td align="left">rand</td><td align="left">Draw samples from a uniform distribution</td></tr><tr><td align="left">randint</td><td align="left">Draw random integers from a given low-to-high range</td></tr><tr><td align="left">randn</td><td align="left">Draw samples from a normal distribution with mean 0 and standard deviation 1 (MATLAB-like interface)</td></tr><tr><td align="left">binomial</td><td align="left">Draw samples a binomial distribution</td></tr><tr><td align="left">normal</td><td align="left">Draw samples from a normal (Gaussian) distribution</td></tr><tr><td align="left">beta</td><td align="left">Draw samples from a beta distribution</td></tr><tr><td align="left">chisquare</td><td align="left">Draw samples from a chi-square distribution</td></tr><tr><td align="left">gamma</td><td align="left">Draw samples from a gamma distribution</td></tr><tr><td align="left">uniform</td><td align="left">Draw samples from a uniform [0, 1) distribution</td></tr></tbody></table><pre class="line-numbers language-python"><code class="language-python">samples <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>round<span class="token punctuation">(</span>samples<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[-0.4422, -0.1181, -1.1577,  0.4524],       [ 0.923 ,  1.8407,  0.1605, -0.9159],       [ 0.7133, -0.0398, -1.3522, -1.1874],       [-0.4133,  0.7873, -0.9728, -0.9143]])</code></pre><p>Python’s built-in <strong>random</strong> module by constrast only samples one value at a time. As you can see from this benchmark, <strong>numpy.random</strong> is well over an order of magnitude faster for generating very large samples</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> random <span class="token keyword">import</span> normalvariateN <span class="token operator">=</span> <span class="token number">1000000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">%</span>timeit sample <span class="token operator">=</span> <span class="token punctuation">[</span>normalvariate<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>1.16 s ± 99.4 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">%</span>timeit np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>size <span class="token operator">=</span> N<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>33 ms ± 1.39 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)</code></pre><p>They’re actually what’s known as “ pseudo random numbers, “ generated by algorithms.</p><pre class="line-numbers language-python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div align=left><img src="https://img-blog.csdnimg.cn/20200301230651854.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="20%"/></div><h3 id="4-6-1-random-random-m-n"><a href="#4-6-1-random-random-m-n" class="headerlink" title="4.6.1 random.random((m,n))"></a>4.6.1 random.random((m,n))</h3><p>The function parameter is a tuple</p><p>Generate random numbers from 0 to 1</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npdata <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Show the variable</span>data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([[0.87481527, 0.11475954, 0.52484471, 0.86935258, 0.09528812],       [0.15106181, 0.12227048, 0.81898961, 0.33022438, 0.94330205]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Print the variable  </span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>[[0.87481527 0.11475954 0.52484471 0.86935258 0.09528812] [0.15106181 0.12227048 0.81898961 0.33022438 0.94330205]]</code></pre><pre class="line-numbers language-python"><code class="language-python">data <span class="token operator">*</span> <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[8.74815275, 1.14759543, 5.24844707, 8.69352576, 0.9528812 ],       [1.51061807, 1.22270479, 8.18989614, 3.30224382, 9.43302047]])</code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>data <span class="token operator">+</span> data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>[[1.74963055 0.22951909 1.04968941 1.73870515 0.19057624] [0.30212361 0.24454096 1.63797923 0.66044876 1.88660409]]</code></pre><p>ndim: the first dimension</p><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">.</span>ndim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>2</code></pre><p>shape: a tuple indicating the size of each dimension</p><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">.</span>shape<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>(2, 5)</code></pre><pre class="line-numbers language-python"><code class="language-python">data_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>data_<span class="token punctuation">.</span>shape <span class="token comment" spellcheck="true"># (3,) Only have one dimension</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>(3,)</code></pre><p>dtype: decribe the data type of the array</p><pre class="line-numbers language-python"><code class="language-python">data<span class="token punctuation">.</span>dtype<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>dtype(&#39;float64&#39;)</code></pre><pre class="line-numbers language-python"><code class="language-python">data2 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>data2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([0.0155825 , 0.80244718, 0.14901417, 0.42191698, 0.60644615,       0.37694115, 0.2821992 , 0.97835977, 0.08436808])</code></pre><h3 id="4-6-2-random-randint-1-8-size-3-2"><a href="#4-6-2-random-randint-1-8-size-3-2" class="headerlink" title="4.6.2 random.randint(1,8, size = (3,2))"></a>4.6.2 random.randint(1,8, size = (3,2))</h3><p>Generate random integer from 1 to 8, left close and right open</p><pre class="line-numbers language-python"><code class="language-python">data_randint <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>data_randint<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre><code>array([[7, 6],       [7, 7],       [1, 2]])</code></pre><h3 id="4-6-3-random-randn-d1-d2-d3-…"><a href="#4-6-3-random-randn-d1-d2-d3-…" class="headerlink" title="4.6.3 random.randn(d1, d2, d3, …)"></a>4.6.3 random.randn(d1, d2, d3, …)</h3><p>randn generates a matrix filled with random floats sampled from a univarite “normal” distribution of <font color=red size=3 face=STHeit>mean</font> 0 and <font color=red size=3 face=STHeit>variance</font> 1</p><p>Notes:<br>For random samples from $N(\sigma, \mu ^ 2)$,use:</p><p><code>sigma * np.random.randn(d1, ) + mu</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># N(1, 6.25)</span>data_normal_distribution <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2.5</span>data_normal_distribution<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code>array([[4.03463856, 5.86698859, 2.59342223],       [2.18876421, 1.66281754, 1.51047393]])</code></pre><h1 id="NumPy-Summay"><a href="#NumPy-Summay" class="headerlink" title="NumPy Summay"></a>NumPy Summay</h1><p>The biggest benefit of NumPy arrays is the use of simple array expressions to complete a variety of data manipulation tasks without the need to write some loops.</p><ul><li>Basic Indexing, Slicing, arr.T return <strong>view</strong></li><li>Boolean Indexing, Fancy Indexing, arr.swapaxes return <strong>copy</strong></li></ul><pre class="line-numbers language-python"><code class="language-python">arr2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 0, 0],       [4, 0, 0],       [7, 8, 9]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr_test <span class="token operator">=</span> arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># return view</span>arr_test <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment" spellcheck="true"># This will change the original arr2d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1, 0, 0],       [4, 0, 0],       [7, 8, 9]])</code></pre><ul><li><code>,</code> locate the dimension </li><li><code>:</code> keep in same dimension (Slicing)</li><li><code>[2,3,1]</code> choose some in this dimension (Fancy Indexing)</li></ul><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>4</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([4, 0, 0])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([1, 4])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[1],       [4]])</code></pre><pre class="line-numbers language-python"><code class="language-python">arr2d<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>array([[7, 8, 9],       [4, 0, 0]])</code></pre><p>How to locate number 5</p><div align=center><img src="https://img-blog.csdnimg.cn/20200306152255838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="50%"/></div><p>Change axis </p><p>Example 1:<br>arr size: 2∗3∗4<br>arr.T size: 4∗3∗2</p><p>old:(0,1,2) = 6<br>now:(2,1,0) = 6</p><div align=center><img src="https://img-blog.csdnimg.cn/20200306120247492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_40,text_cGhvdG8gYnkgc2h3ZWk=,size_25,color_FFFFFF,t_50,g_center" width="50%"/></div>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transfer video to mp3</title>
      <link href="/posts/20236.html"/>
      <url>/posts/20236.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>视频文件大小一般都有200-300MB，而有时我只想要这个视频的背景音乐，把视频文件转换为音频文件，这样文件大小就会在10MB以内</p></blockquote><p>使用python可以快速批量的把视频文件转换为音频文件</p><h1 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h1><ul><li><p>安装ffmpy3库</p></li><li><p>用os模块把视频的文件名读取出来，放在列表中</p></li><li><p>然后把所有视频文件后缀替换为音频的格式</p></li><li><p>当然只改后缀是不行的，因为文件属性并没有更改，我们再用FFmpeg方法对转换后的音频文件赋予它音频的属性</p></li></ul><h2 id="Python完整代码"><a href="#Python完整代码" class="headerlink" title="Python完整代码"></a>Python完整代码</h2><p>运行下面代码即可实现视频文件转换为音频文件（注意修改文件路径）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">from</span> ffmpy3 <span class="token keyword">import</span> FFmpeg<span class="token comment" spellcheck="true"># filepath：待处理视频的文件路径</span>filepath <span class="token operator">=</span> <span class="token string">"/Users/macos/Documents/Wilson79/GitHub/video-to-mp3/video"</span>filename <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"待处理的视频文件:"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># output_dir：输出音频文件的路径</span>output_dir <span class="token operator">=</span> <span class="token string">"/Users/macos/Documents/Wilson79/GitHub/video-to-mp3/music"</span><span class="token comment" spellcheck="true"># 读取上次已导出的音频文件名（防止多次运行，出现overwrited的错误）</span>exit_filename <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>output_dir<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"已导出的音频文件: "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>exit_filename<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 改文件的后缀名</span>    changefile <span class="token operator">=</span> filepath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> filename<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    change_postfix_name <span class="token operator">=</span>filename<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'mp4'</span><span class="token punctuation">,</span> <span class="token string">'mp3'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'flv'</span><span class="token punctuation">,</span> <span class="token string">'mp3'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 另外的视频格式请自行添加</span>    outputfile <span class="token operator">=</span> output_dir <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> change_postfix_name    <span class="token keyword">if</span> change_postfix_name <span class="token keyword">in</span> exit_filename<span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>changefile<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 利用FFmpeg进行转换</span>    fpg <span class="token operator">=</span> FFmpeg<span class="token punctuation">(</span>inputs<span class="token operator">=</span><span class="token punctuation">{</span>changefile<span class="token punctuation">:</span> None<span class="token punctuation">}</span><span class="token punctuation">,</span>                 outputs<span class="token operator">=</span><span class="token punctuation">{</span>outputfile<span class="token punctuation">:</span> <span class="token string">'-vn -ar 44100 -ac 2 -ab 192 -f mp3'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># mp3也可以换成wav等格式</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>fpg<span class="token punctuation">.</span>cmd<span class="token punctuation">)</span>    fpg<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n任务完成！！！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="运行后的效果"><a href="#运行后的效果" class="headerlink" title="运行后的效果"></a>运行后的效果</h1><p><img src="https://img-blog.csdnimg.cn/20200212160136119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p><div align=center><img src="https://img-blog.csdnimg.cn/20200212153448976.png" width="100%" height="70%" /></div><div align=center><img src="https://img-blog.csdnimg.cn/20200212153510214.png" width="100%" height="70%" /></div>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-cheatsheets</title>
      <link href="/posts/32313.html"/>
      <url>/posts/32313.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.datacamp.com/community/data-science-cheatsheets" target="_blank" rel="noopener">https://www.datacamp.com/community/data-science-cheatsheets</a><br><img src="https://img-blog.csdnimg.cn/2020030818551093.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p><ul><li><a href="https://weisenhui.top/file/DataCamp/Jupyter-Notebook.pdf">Jupyter Notebook</a></li><li><a href="https://weisenhui.top/file/DataCamp/Python-Basics.pdf">Python Basics</a></li><li><a href="https://weisenhui.top/file/DataCamp/NumPy-Basics.pdf">NumPy Basics</a></li><li><a href="https://weisenhui.top/file/DataCamp/Pandas-Basics.pdf">Pandas Basics</a></li><li><a href="https://weisenhui.top/file/DataCamp/Scikit-Learn.pdf">Scikit-Learn</a></li><li><a href="https://weisenhui.top/file/DataCamp/Linear-Algebra.pdf">Linear-Algebra</a></li></ul><p><img src="https://img-blog.csdnimg.cn/20200308185752222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Master Theorem</title>
      <link href="/posts/11000.html"/>
      <url>/posts/11000.html</url>
      
        <content type="html"><![CDATA[<h1 id="主定理的内容"><a href="#主定理的内容" class="headerlink" title="主定理的内容"></a>主定理的内容</h1><p>《算法导论》中提到了主定理，用来分析<strong>分治</strong>方法带来的<br><strong>主定理是解决递归时间复杂度的一种直接方法</strong>，<strong>适合于以下类型的递推公式</strong><br>$$T(n) = aT(n/b) + O(n^d)  （a &gt;= 1 且 b &gt; 1）$$</p><p>其中$n$为问题规模，$a$为递推的子问题数量，$n/b$为每个子问题的规模（假设每个子问题的规模基本一样），$O(n^d)$为递推以外进行的计算工作量</p><p>那么问题的<font color=red size=3 face=STHeit>时间复杂度$T(n)$</font>为</p><ul><li>如果$a &lt; b^d$，则$T(n) = O(n^d)$</li><li>如果$a = b^d$，则$T(n) = O(n^dlogn)$</li><li>如果$a &gt; b^d$，则$T(n) = O(n^{log_b^a})$</li></ul><hr><p>说明：像$T(n) = T(\sqrt{n}) + 1$这个公式就不符合上面的递归类型，不过它可以通过换元得到上面形式，这里不再赘述</p><h1 id="具体应用"><a href="#具体应用" class="headerlink" title="具体应用"></a>具体应用</h1><p><strong>例：二分查找</strong></p><p>$T(n) = T(n/2) + O(n^0)$  假设每个子问题的规模基本一样</p><p> $a = 1, b = 2, d = 0,b^d = 1$ ，所以 $T(n) = O(logn)$ </p><hr><p><strong>例：归并排序</strong></p><p>$T(n) = 2T(n/2) + O(n^1)$  假设每个子问题的规模基本一样</p><p> $a = 2, b = 2, d = 1,b^d = 2$ ，所以 $T(n) = O(nlogn)$ </p><hr><p><strong>例：LeetCode 236. 二叉树的最近公共祖先</strong></p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    TreeNode<span class="token operator">*</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">,</span> TreeNode<span class="token operator">*</span> p<span class="token punctuation">,</span> TreeNode<span class="token operator">*</span> q<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>        TreeNode<span class="token operator">*</span> left <span class="token operator">=</span>  <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token operator">-</span><span class="token operator">></span>left<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>        TreeNode<span class="token operator">*</span> right <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token operator">-</span><span class="token operator">></span>right<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">==</span> p <span class="token operator">||</span> root <span class="token operator">==</span> q<span class="token punctuation">)</span>             <span class="token keyword">return</span> root<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token keyword">return</span> right<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>right <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token keyword">return</span> left<span class="token punctuation">;</span>              <span class="token keyword">if</span><span class="token punctuation">(</span>left <span class="token operator">&amp;&amp;</span> right<span class="token punctuation">)</span> <span class="token keyword">return</span> root<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$T(n) = 2T(n/2) + O(n^0)$  假设每个子问题的规模基本一样，也就是说我们可以<font color=red size=3 face=STHeit>假设左右子树的结点数相同</font></p><p> $a = 2, b = 2, d = 0,b^d = 1$ ，所以 $T(n) = O(n)$ </p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
