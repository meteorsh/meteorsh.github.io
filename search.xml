<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>B站视频下载神器</title>
      <link href="/b-zhan-shi-pin-xia-zai-shen-qi-miao-sha-100-de-shi-pin/"/>
      <url>/b-zhan-shi-pin-xia-zai-shen-qi-miao-sha-100-de-shi-pin/</url>
      
        <content type="html"><![CDATA[<h1 id="唧唧Down——适合Windows-强烈推荐"><a href="#唧唧Down——适合Windows-强烈推荐" class="headerlink" title="唧唧Down——适合Windows(强烈推荐)"></a>唧唧Down——适合Windows(强烈推荐)</h1><blockquote><p>哔哩哔哩下载神器：唧唧Down<br>官网：<a href="http://client.jijidown.com/" target="_blank" rel="noopener">http://client.jijidown.com/</a></p></blockquote><ul><li>下载完成后，运行软件</li><li>只要把你想下载的b站视频网址复制到该软件就可以下载</li><li>视频清晰度可选1080p，还可以设置是否下载弹幕</li><li>用这款软件再配合potplayer，可以尽情享用b站任何视频</li></ul><p><img src="http://jfile.jijidown.com/Web/client.jijidown.com/img/newlook.png?20171208" alt=""></p><h1 id="Chrome插件——适合Mac-Windows"><a href="#Chrome插件——适合Mac-Windows" class="headerlink" title="Chrome插件——适合Mac/Windows"></a>Chrome插件——适合Mac/Windows</h1><ul><li><p>借助Chrome插件 bilibili哔哩哔哩下载助手<br><img src="https://img-blog.csdnimg.cn/20190930112541271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p></li><li><p>在谷歌应用商城下载安装后在b站视频右下角打开下载助手，点击合并下载即可<br><img src="https://img-blog.csdnimg.cn/2019093011282092.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p></li></ul><h1 id="神器youtube-dl——适合Mac-Windows"><a href="#神器youtube-dl——适合Mac-Windows" class="headerlink" title="神器youtube-dl——适合Mac/Windows"></a>神器youtube-dl——适合Mac/Windows</h1><p><a href="https://github.com/ytdl-org/youtube-dl" target="_blank" rel="noopener"></a><br>一：mac下安装方法很简单<br>打开终端根目录，输入下面两条命令即可<br><img src="https://img-blog.csdnimg.cn/20190930144426383.png" alt=""><br>二：使用方法</p><ol><li>youtube-dl 网址      //在哪个文件夹用终端，就会把文件下载到这个文件夹</li><li>youtube-dl 网址 -o ‘你要的名字.mp4’</li><li>youtube-dl -F 网址             //查看支持的视频格式</li><li>youtube-dl -f format编号 网址  //下载对应的视频格式, 一般默认是best画质</li></ol><p>说明: 此方法不仅可以下载b站视频也可以下载youtube视频<br><img src="https://img-blog.csdnimg.cn/20190930144743703.png" alt=""></p><p>至于Windows下使用就更简单了，直接在项目地址那下载exe文件就可以使用了<br><img src="https://img-blog.csdnimg.cn/20190930144933247.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 分裂二叉树的最大乘积</title>
      <link href="/leetcode-ti-jie-1339.fen-lie-er-cha-shu-de-zui-da-cheng-ji-di-gui-zi-di-xiang-shang-c/"/>
      <url>/leetcode-ti-jie-1339.fen-lie-er-cha-shu-de-zui-da-cheng-ji-di-gui-zi-di-xiang-shang-c/</url>
      
        <content type="html"><![CDATA[<h1 id="题目描述（中等难度）"><a href="#题目描述（中等难度）" class="headerlink" title="题目描述（中等难度）"></a>题目描述（中等难度）</h1><p><a href="https://leetcode-cn.com/problems/maximum-product-of-splitted-binary-tree/" target="_blank" rel="noopener">原题链接</a></p><p><img src="https://img-blog.csdnimg.cn/20200211184843860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzODI3NTk1,size_16,color_FFFFFF,t_70" alt=""></p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><p><strong>(递归)</strong> $O(n)$</p><ul><li>乘积 = 某个节点下所有子节点的和 *（整个树的和 - 某个节点下所有子节点的和）</li><li>后序遍历每个结点，更新最大值</li><li>注意：先用long long存数据，另外在max函数中不要先取<a href="https://blog.csdn.net/qq_43827595/article/details/104267327" target="_blank" rel="noopener">解释</a><br>后序遍历的好处：后序遍历可以从叶子结点开始，先求出子树的状态，然后更新root结点，这样自底向上可以减少大量重复的计算<br>时间复杂度是$O(n)$，空间复杂度是$O(n)$：需要使用系统栈空间</li></ul><h1 id="C-代码"><a href="#C-代码" class="headerlink" title="C++代码"></a>C++代码</h1><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">/** * Definition for a binary tree node. * struct TreeNode { *     int val; *     TreeNode *left; *     TreeNode *right; *     TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token comment" spellcheck="true">// 乘积 = 某个节点下所有子节点的和 *（整个树的和 - 某个节点下所有子节点的和）</span>    <span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> LL<span class="token punctuation">;</span>    LL rmax <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    LL Total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">const</span> LL mod <span class="token operator">=</span> <span class="token number">1e9</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 后序遍历，遍历每个结点，更新最大值</span>    LL <span class="token function">TreeSum</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        LL left <span class="token operator">=</span> <span class="token function">TreeSum</span><span class="token punctuation">(</span>root<span class="token operator">-</span><span class="token operator">></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>        LL right <span class="token operator">=</span> <span class="token function">TreeSum</span><span class="token punctuation">(</span>root<span class="token operator">-</span><span class="token operator">></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>        LL subsum <span class="token operator">=</span> left <span class="token operator">+</span> right <span class="token operator">+</span> root<span class="token operator">-</span><span class="token operator">></span>val<span class="token punctuation">;</span>        rmax <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>rmax<span class="token punctuation">,</span> <span class="token punctuation">(</span>Total <span class="token operator">-</span> subsum<span class="token punctuation">)</span> <span class="token operator">*</span> subsum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 不能先取模</span>        <span class="token keyword">return</span> subsum<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> <span class="token function">maxProduct</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        Total <span class="token operator">=</span> <span class="token function">TreeSum</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>        rmax <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">TreeSum</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> rmax <span class="token operator">%</span> mod<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><strong>写在最后</strong>：我的博客主要是对计算机领域所学知识的总结、回顾和思考，把每篇博客写得通俗易懂是我的目标，<font color=red size=3 face=STHeiti>分享技术和知识是一种快乐 </font>，非常欢迎大家和我一起交流学习，有任何问题都可以在评论区留言，也期待与您的深入交流（＾∀＾●）</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
